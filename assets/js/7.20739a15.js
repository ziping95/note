(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{204:function(t,s,a){t.exports=a.p+"assets/img/git-setting.92028573.png"},236:function(t,s,a){"use strict";a.r(s);var e=a(0),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-相关"}},[t._v("#")]),t._v(" Git 相关")]),t._v(" "),e("h2",{attrs:{id:"首次提交被拒绝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#首次提交被拒绝"}},[t._v("#")]),t._v(" 首次提交被拒绝")]),t._v(" "),e("p",[t._v("如果刚创建的git仓库首次提交被拒绝，一般是因为远程仓库有修改过"),e("code",[t._v("README.md")]),t._v("导致本地的提交记录和远程仓库的记录完全不相同，git会认为你写错了远程仓库地址，这时候只需要在执行"),e("code",[t._v("git pull")]),t._v("时候告诉git你没写错地址即可")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git pull origin master --allow-unrelated-histories\n")])])]),e("h2",{attrs:{id:"git-exe客户端配置公钥秘钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-exe客户端配置公钥秘钥"}},[t._v("#")]),t._v(" git.exe客户端配置公钥秘钥")]),t._v(" "),e("ol",[e("li",[t._v("检查是否有设置账户名")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config user.name\n")])])]),e("p",[t._v("如果没有，设置账户名")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git账户名"')]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("执行命令生成公钥秘钥")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("ssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxx@xxx.com'")]),t._v("\n")])])]),e("p",[t._v("生成的公钥位置"),e("code",[t._v("C:\\Users\\当前用户\\.ssh\\id_rsa.pub")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("去gitlib中将此次生成的公钥"),e("code",[t._v("id_rsa.pub")]),t._v("添加进去")])]),t._v(" "),e("h2",{attrs:{id:"提交代码时出现tortoisegitplink弹窗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交代码时出现tortoisegitplink弹窗"}},[t._v("#")]),t._v(" 提交代码时出现TortoiseGitPlink弹窗")]),t._v(" "),e("ol",[e("li",[t._v("右键打开TortoiseGit设置中的"),e("code",[t._v("Network")]),t._v("选项卡。")]),t._v(" "),e("li",[t._v("修改"),e("code",[t._v("SSH client")]),t._v("地址为"),e("code",[t._v("C:\\Windows\\System32\\OpenSSH\\ssh.exe")]),t._v(" "),e("img",{attrs:{src:a(204),alt:""}})])]),t._v(" "),e("h2",{attrs:{id:"tortoisegit配置公钥私钥（一般不用）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tortoisegit配置公钥私钥（一般不用）"}},[t._v("#")]),t._v(" TortoiseGit配置公钥私钥（一般不用）")]),t._v(" "),e("ol",[e("li",[t._v("运行TortoiseGit开始菜单中的PuTTYgen程序，创建RSA密钥对，然后保存。")]),t._v(" "),e("li",[t._v("运行TortoiseGit开始菜单中的Pageant程序，并添加上一步中保存的私钥。")]),t._v(" "),e("li",[t._v("将密钥对中的公钥，添加到gitlib账号中")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("如果出现可以"),e("code",[t._v("clone")]),t._v("代码但无法"),e("code",[t._v("pull")]),t._v("和"),e("code",[t._v("push")]),t._v("情况,则需要指定秘钥\n在项目路径下右键设置——Git——Remote——Putty key指定刚才生成的秘钥")])])])}),[],!1,null,null,null);s.default=i.exports}}]);